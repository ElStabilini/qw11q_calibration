[Qibo 0.2.12|INFO|2024-09-23 14:32:08]: Loading platform dummy
2024-09-23 14:32:09,139 - qm - INFO     - Starting session: dbdb48d4-1398-4a3d-80c1-870628b907ad
/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qualang_tools/simulator_tools.py:8: FutureWarning: The 'create_simulator_controller_connections' function has been moved to 'qualang_tools.simulator'.
  warnings.warn(
[Qibo 0.2.12|INFO|2024-09-23 14:32:09]: Loading platform qw11q
[38;20m[Qibocal 0.0.12|INFO|2024-09-23 14:32:09]: Creating directory /home/users/elisa.stabilini/cal_qw11q/output_D3/resonator_punchout_test.[0m
[Qibo 0.2.12|INFO|2024-09-23 14:32:09]: Connecting to instrument QMController(name='qm', address='192.168.0.101:80', opxs={'con2': OPXplus(name='con2', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0d96d900>, {1: OPXOutput(device='con2', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con2', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con2', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con2', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con2', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con2', number=8, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6dd0>, {1: OPXInput(device='con2', number=1, offset=0.0, gain=10), 2: OPXInput(device='con2', number=2, offset=0.0, gain=10)})), 'con3': OPXplus(name='con3', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6e60>, {1: OPXOutput(device='con3', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con3', number=2, offset=0.0, filter={}), 7: OPXOutput(device='con3', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con3', number=8, offset=0.0, filter={}), 5: OPXOutput(device='con3', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con3', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6ef0>, {})), 'con4': OPXplus(name='con4', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6f80>, {1: OPXOutput(device='con4', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con4', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con4', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con4', number=4, offset=0.0, filter={}), 5: OPXOutput(device='con4', number=5, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7010>, {})), 'con5': OPXplus(name='con5', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff70a0>, {1: OPXOutput(device='con5', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con5', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con5', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con5', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con5', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con5', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con5', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con5', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con5', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con5', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7130>, {1: OPXInput(device='con5', number=1, offset=0.0, gain=0), 2: OPXInput(device='con5', number=2, offset=0.0, gain=0)})), 'con6': OPXplus(name='con6', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff71c0>, {1: OPXOutput(device='con6', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con6', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con6', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con6', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con6', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con6', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con6', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con6', number=10, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7250>, {1: OPXInput(device='con6', number=1, offset=0.0, gain=10), 2: OPXInput(device='con6', number=2, offset=0.0, gain=10)})), 'con7': OPXplus(name='con7', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff72e0>, {3: OPXOutput(device='con7', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con7', number=4, offset=0.0, filter={}), 5: OPXOutput(device='con7', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con7', number=6, offset=0.0, filter={}), 7: OPXOutput(device='con7', number=7, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7370>, {})), 'con8': OPXplus(name='con8', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7400>, {3: OPXOutput(device='con8', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con8', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con8', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con8', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con8', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con8', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con8', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con8', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7490>, {})), 'con9': OPXplus(name='con9', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7520>, {3: OPXOutput(device='con9', number=3, offset=0.22322496600648412, filter={'feedforward': [1.1298143371682787, -0.9007185757251136], 'feedback': [0.7709042385568349]}), 4: OPXOutput(device='con9', number=4, offset=-0.4192448541412081, filter={'feedforward': [1.0891790415038731, -1.024484298837039], 'feedback': [0.935305257333166]}), 5: OPXOutput(device='con9', number=5, offset=-0.2074, filter={'feedforward': [1.0725851073784813, -0.9529722265285006], 'feedback': [0.880387119150019]}), 6: OPXOutput(device='con9', number=6, offset=0.0, filter={}), 7: OPXOutput(device='con9', number=7, offset=-0.04, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff75b0>, {}))}, octaves={'octave2': Octave(name='octave2', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7640>, {1: OctaveOutput(device='octave2', number=1, lo_frequency=7430000000, gain=-10, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con2', number=1, offset=0.0, filter={}), q=OPXOutput(device='con2', number=2, offset=0.0, filter={}))), 2: OctaveOutput(device='octave2', number=2, lo_frequency=4800000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con2', number=3, offset=0.0, filter={}), q=OPXOutput(device='con2', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave2', number=4, lo_frequency=6100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con2', number=7, offset=0.0, filter={}), q=OPXOutput(device='con2', number=8, offset=0.0, filter={}))), 3: OctaveOutput(device='octave2', number=3, lo_frequency=4800000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None), 5: OctaveOutput(device='octave2', number=5, lo_frequency=6100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff76d0>, {1: OctaveInput(device='octave2', number=1, lo_frequency=7430000000, lo_source='internal', IF_mode_I='direct', IF_mode_Q='direct', opx_port=OPXIQ(i=OPXInput(device='con2', number=1, offset=0.0, gain=10), q=OPXInput(device='con2', number=2, offset=0.0, gain=10)))}), port=101, connectivity=OPXplus(name='con2', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0d96d900>, {1: OPXOutput(device='con2', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con2', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con2', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con2', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con2', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con2', number=8, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6dd0>, {1: OPXInput(device='con2', number=1, offset=0.0, gain=10), 2: OPXInput(device='con2', number=2, offset=0.0, gain=10)}))), 'octave3': Octave(name='octave3', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7760>, {1: OctaveOutput(device='octave3', number=1, lo_frequency=5800000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con3', number=1, offset=0.0, filter={}), q=OPXOutput(device='con3', number=2, offset=0.0, filter={}))), 4: OctaveOutput(device='octave3', number=4, lo_frequency=6600000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con3', number=7, offset=0.0, filter={}), q=OPXOutput(device='con3', number=8, offset=0.0, filter={}))), 3: OctaveOutput(device='octave3', number=3, lo_frequency=5900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con3', number=5, offset=0.0, filter={}), q=OPXOutput(device='con3', number=6, offset=0.0, filter={}))), 2: OctaveOutput(device='octave3', number=2, lo_frequency=5900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None), 5: OctaveOutput(device='octave3', number=5, lo_frequency=6600000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff77f0>, {}), port=102, connectivity=OPXplus(name='con3', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6e60>, {1: OPXOutput(device='con3', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con3', number=2, offset=0.0, filter={}), 7: OPXOutput(device='con3', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con3', number=8, offset=0.0, filter={}), 5: OPXOutput(device='con3', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con3', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6ef0>, {}))), 'octave4': Octave(name='octave4', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7880>, {1: OctaveOutput(device='octave4', number=1, lo_frequency=7520000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=1, offset=0.0, filter={}), q=OPXOutput(device='con5', number=2, offset=0.0, filter={}))), 2: OctaveOutput(device='octave4', number=2, lo_frequency=4900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=3, offset=0.0, filter={}), q=OPXOutput(device='con5', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave4', number=4, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=7, offset=0.0, filter={}), q=OPXOutput(device='con5', number=8, offset=0.0, filter={}))), 5: OctaveOutput(device='octave4', number=5, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=9, offset=0.0, filter={}), q=OPXOutput(device='con5', number=10, offset=0.0, filter={}))), 3: OctaveOutput(device='octave4', number=3, lo_frequency=4900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=5, offset=0.0, filter={}), q=OPXOutput(device='con5', number=6, offset=0.0, filter={})))}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7910>, {1: OctaveInput(device='octave4', number=1, lo_frequency=7520000000, lo_source='internal', IF_mode_I='direct', IF_mode_Q='direct', opx_port=OPXIQ(i=OPXInput(device='con5', number=1, offset=0.0, gain=0), q=OPXInput(device='con5', number=2, offset=0.0, gain=0)))}), port=103, connectivity=OPXplus(name='con5', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff70a0>, {1: OPXOutput(device='con5', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con5', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con5', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con5', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con5', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con5', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con5', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con5', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con5', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con5', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7130>, {1: OPXInput(device='con5', number=1, offset=0.0, gain=0), 2: OPXInput(device='con5', number=2, offset=0.0, gain=0)}))), 'octave5': Octave(name='octave5', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff79a0>, {1: OctaveOutput(device='octave5', number=1, lo_frequency=7450000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=1, offset=0.0, filter={}), q=OPXOutput(device='con6', number=2, offset=0.0, filter={}))), 2: OctaveOutput(device='octave5', number=2, lo_frequency=5100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=3, offset=0.0, filter={}), q=OPXOutput(device='con6', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave5', number=4, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=7, offset=0.0, filter={}), q=OPXOutput(device='con6', number=8, offset=0.0, filter={}))), 5: OctaveOutput(device='octave5', number=5, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=9, offset=0.0, filter={}), q=OPXOutput(device='con6', number=10, offset=0.0, filter={}))), 3: OctaveOutput(device='octave5', number=3, lo_frequency=5100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7a30>, {1: OctaveInput(device='octave5', number=1, lo_frequency=7450000000, lo_source='internal', IF_mode_I='direct', IF_mode_Q='direct', opx_port=OPXIQ(i=OPXInput(device='con6', number=1, offset=0.0, gain=10), q=OPXInput(device='con6', number=2, offset=0.0, gain=10)))}), port=104, connectivity=OPXplus(name='con6', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff71c0>, {1: OPXOutput(device='con6', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con6', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con6', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con6', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con6', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con6', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con6', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con6', number=10, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7250>, {1: OPXInput(device='con6', number=1, offset=0.0, gain=10), 2: OPXInput(device='con6', number=2, offset=0.0, gain=10)}))), 'octave6': Octave(name='octave6', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7ac0>, {2: OctaveOutput(device='octave6', number=2, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=3, offset=0.0, filter={}), q=OPXOutput(device='con8', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave6', number=4, lo_frequency=6400000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=7, offset=0.0, filter={}), q=OPXOutput(device='con8', number=8, offset=0.0, filter={}))), 5: OctaveOutput(device='octave6', number=5, lo_frequency=6400000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=9, offset=0.0, filter={}), q=OPXOutput(device='con8', number=10, offset=0.0, filter={}))), 3: OctaveOutput(device='octave6', number=3, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=5, offset=0.0, filter={}), q=OPXOutput(device='con8', number=6, offset=0.0, filter={}))), 1: OctaveOutput(device='octave6', number=1, lo_frequency=4900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7b50>, {}), port=105, connectivity=OPXplus(name='con8', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7400>, {3: OPXOutput(device='con8', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con8', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con8', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con8', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con8', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con8', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con8', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con8', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7490>, {})))}, time_of_flight=224, smearing=0, bounds=Bounds(waveforms=40000, readout=30, instructions=1000000), calibration_path=PosixPath('/nfs/tools/qibolab_platforms_qrc/qw11q'), write_calibration=False, _calibration_path=None, script_file_name=None, manager=None, config=QMConfig(version=1, controllers={}, octaves={}, elements={}, pulses={}, waveforms={}, digital_waveforms={'ON': {'samples': [(1, 0)]}}, integration_weights={}, mixers={}), is_connected=False, simulation_duration=None, cloud=False).
/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qm/quantum_machines_manager.py:102: DeprecationWarning: QMM was opened with OctaveConfig. Please note that from QOP2.4.0 the octave devices are managed by the cluster setting in the QM-app. It is recommended to remove the OctaveConfig from the QMM instantiation.
  warnings.warn(
2024-09-23 14:32:10,938 - qm - INFO     - Performing health check
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con1. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con2. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con3. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con4. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con5. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con6. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con7. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con8. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - WARNING  - Health check warning: Inter-OPX connectivity issues in OPX: con9. Missing ports are: 12, 11, 10, 9. See QM-App for more info.
2024-09-23 14:32:10,958 - qm - INFO     - Health check passed
[Qibo 0.2.12|INFO|2024-09-23 14:32:10]: Connecting to instrument <qibolab.instruments.rohde_schwarz.SGS100A object at 0x7f9a0cfe32b0>.
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument <qibolab.instruments.rohde_schwarz.SGS100A object at 0x7f9a0cfe2fb0>.
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con2', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0d96d900>, {1: OPXOutput(device='con2', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con2', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con2', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con2', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con2', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con2', number=8, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6dd0>, {1: OPXInput(device='con2', number=1, offset=0.0, gain=10), 2: OPXInput(device='con2', number=2, offset=0.0, gain=10)})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con3', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6e60>, {1: OPXOutput(device='con3', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con3', number=2, offset=0.0, filter={}), 7: OPXOutput(device='con3', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con3', number=8, offset=0.0, filter={}), 5: OPXOutput(device='con3', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con3', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6ef0>, {})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con4', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6f80>, {1: OPXOutput(device='con4', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con4', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con4', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con4', number=4, offset=0.0, filter={}), 5: OPXOutput(device='con4', number=5, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7010>, {})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con5', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff70a0>, {1: OPXOutput(device='con5', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con5', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con5', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con5', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con5', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con5', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con5', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con5', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con5', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con5', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7130>, {1: OPXInput(device='con5', number=1, offset=0.0, gain=0), 2: OPXInput(device='con5', number=2, offset=0.0, gain=0)})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con6', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff71c0>, {1: OPXOutput(device='con6', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con6', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con6', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con6', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con6', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con6', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con6', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con6', number=10, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7250>, {1: OPXInput(device='con6', number=1, offset=0.0, gain=10), 2: OPXInput(device='con6', number=2, offset=0.0, gain=10)})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con7', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff72e0>, {3: OPXOutput(device='con7', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con7', number=4, offset=0.0, filter={}), 5: OPXOutput(device='con7', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con7', number=6, offset=0.0, filter={}), 7: OPXOutput(device='con7', number=7, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7370>, {})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con8', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7400>, {3: OPXOutput(device='con8', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con8', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con8', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con8', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con8', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con8', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con8', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con8', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7490>, {})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument OPXplus(name='con9', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7520>, {3: OPXOutput(device='con9', number=3, offset=0.22322496600648412, filter={'feedforward': [1.1298143371682787, -0.9007185757251136], 'feedback': [0.7709042385568349]}), 4: OPXOutput(device='con9', number=4, offset=-0.4192448541412081, filter={'feedforward': [1.0891790415038731, -1.024484298837039], 'feedback': [0.935305257333166]}), 5: OPXOutput(device='con9', number=5, offset=-0.2074, filter={'feedforward': [1.0725851073784813, -0.9529722265285006], 'feedback': [0.880387119150019]}), 6: OPXOutput(device='con9', number=6, offset=0.0, filter={}), 7: OPXOutput(device='con9', number=7, offset=-0.04, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff75b0>, {})).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument Octave(name='octave2', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7640>, {1: OctaveOutput(device='octave2', number=1, lo_frequency=7430000000, gain=-10, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con2', number=1, offset=0.0, filter={}), q=OPXOutput(device='con2', number=2, offset=0.0, filter={}))), 2: OctaveOutput(device='octave2', number=2, lo_frequency=4800000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con2', number=3, offset=0.0, filter={}), q=OPXOutput(device='con2', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave2', number=4, lo_frequency=6100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con2', number=7, offset=0.0, filter={}), q=OPXOutput(device='con2', number=8, offset=0.0, filter={}))), 3: OctaveOutput(device='octave2', number=3, lo_frequency=4800000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None), 5: OctaveOutput(device='octave2', number=5, lo_frequency=6100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff76d0>, {1: OctaveInput(device='octave2', number=1, lo_frequency=7430000000, lo_source='internal', IF_mode_I='direct', IF_mode_Q='direct', opx_port=OPXIQ(i=OPXInput(device='con2', number=1, offset=0.0, gain=10), q=OPXInput(device='con2', number=2, offset=0.0, gain=10)))}), port=101, connectivity=OPXplus(name='con2', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0d96d900>, {1: OPXOutput(device='con2', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con2', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con2', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con2', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con2', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con2', number=8, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6dd0>, {1: OPXInput(device='con2', number=1, offset=0.0, gain=10), 2: OPXInput(device='con2', number=2, offset=0.0, gain=10)}))).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument Octave(name='octave3', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7760>, {1: OctaveOutput(device='octave3', number=1, lo_frequency=5800000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con3', number=1, offset=0.0, filter={}), q=OPXOutput(device='con3', number=2, offset=0.0, filter={}))), 4: OctaveOutput(device='octave3', number=4, lo_frequency=6600000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con3', number=7, offset=0.0, filter={}), q=OPXOutput(device='con3', number=8, offset=0.0, filter={}))), 3: OctaveOutput(device='octave3', number=3, lo_frequency=5900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con3', number=5, offset=0.0, filter={}), q=OPXOutput(device='con3', number=6, offset=0.0, filter={}))), 2: OctaveOutput(device='octave3', number=2, lo_frequency=5900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None), 5: OctaveOutput(device='octave3', number=5, lo_frequency=6600000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff77f0>, {}), port=102, connectivity=OPXplus(name='con3', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6e60>, {1: OPXOutput(device='con3', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con3', number=2, offset=0.0, filter={}), 7: OPXOutput(device='con3', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con3', number=8, offset=0.0, filter={}), 5: OPXOutput(device='con3', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con3', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff6ef0>, {}))).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument Octave(name='octave4', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7880>, {1: OctaveOutput(device='octave4', number=1, lo_frequency=7520000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=1, offset=0.0, filter={}), q=OPXOutput(device='con5', number=2, offset=0.0, filter={}))), 2: OctaveOutput(device='octave4', number=2, lo_frequency=4900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=3, offset=0.0, filter={}), q=OPXOutput(device='con5', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave4', number=4, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=7, offset=0.0, filter={}), q=OPXOutput(device='con5', number=8, offset=0.0, filter={}))), 5: OctaveOutput(device='octave4', number=5, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=9, offset=0.0, filter={}), q=OPXOutput(device='con5', number=10, offset=0.0, filter={}))), 3: OctaveOutput(device='octave4', number=3, lo_frequency=4900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con5', number=5, offset=0.0, filter={}), q=OPXOutput(device='con5', number=6, offset=0.0, filter={})))}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7910>, {1: OctaveInput(device='octave4', number=1, lo_frequency=7520000000, lo_source='internal', IF_mode_I='direct', IF_mode_Q='direct', opx_port=OPXIQ(i=OPXInput(device='con5', number=1, offset=0.0, gain=0), q=OPXInput(device='con5', number=2, offset=0.0, gain=0)))}), port=103, connectivity=OPXplus(name='con5', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff70a0>, {1: OPXOutput(device='con5', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con5', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con5', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con5', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con5', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con5', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con5', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con5', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con5', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con5', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7130>, {1: OPXInput(device='con5', number=1, offset=0.0, gain=0), 2: OPXInput(device='con5', number=2, offset=0.0, gain=0)}))).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument Octave(name='octave5', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff79a0>, {1: OctaveOutput(device='octave5', number=1, lo_frequency=7450000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=1, offset=0.0, filter={}), q=OPXOutput(device='con6', number=2, offset=0.0, filter={}))), 2: OctaveOutput(device='octave5', number=2, lo_frequency=5100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=3, offset=0.0, filter={}), q=OPXOutput(device='con6', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave5', number=4, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=7, offset=0.0, filter={}), q=OPXOutput(device='con6', number=8, offset=0.0, filter={}))), 5: OctaveOutput(device='octave5', number=5, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con6', number=9, offset=0.0, filter={}), q=OPXOutput(device='con6', number=10, offset=0.0, filter={}))), 3: OctaveOutput(device='octave5', number=3, lo_frequency=5100000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7a30>, {1: OctaveInput(device='octave5', number=1, lo_frequency=7450000000, lo_source='internal', IF_mode_I='direct', IF_mode_Q='direct', opx_port=OPXIQ(i=OPXInput(device='con6', number=1, offset=0.0, gain=10), q=OPXInput(device='con6', number=2, offset=0.0, gain=10)))}), port=104, connectivity=OPXplus(name='con6', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff71c0>, {1: OPXOutput(device='con6', number=1, offset=0.0, filter={}), 2: OPXOutput(device='con6', number=2, offset=0.0, filter={}), 3: OPXOutput(device='con6', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con6', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con6', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con6', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con6', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con6', number=10, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7250>, {1: OPXInput(device='con6', number=1, offset=0.0, gain=10), 2: OPXInput(device='con6', number=2, offset=0.0, gain=10)}))).
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Connecting to instrument Octave(name='octave6', outputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7ac0>, {2: OctaveOutput(device='octave6', number=2, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=3, offset=0.0, filter={}), q=OPXOutput(device='con8', number=4, offset=0.0, filter={}))), 4: OctaveOutput(device='octave6', number=4, lo_frequency=6400000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=7, offset=0.0, filter={}), q=OPXOutput(device='con8', number=8, offset=0.0, filter={}))), 5: OctaveOutput(device='octave6', number=5, lo_frequency=6400000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=9, offset=0.0, filter={}), q=OPXOutput(device='con8', number=10, offset=0.0, filter={}))), 3: OctaveOutput(device='octave6', number=3, lo_frequency=5700000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=OPXIQ(i=OPXOutput(device='con8', number=5, offset=0.0, filter={}), q=OPXOutput(device='con8', number=6, offset=0.0, filter={}))), 1: OctaveOutput(device='octave6', number=1, lo_frequency=4900000000, gain=0, lo_source='internal', output_mode='triggered', digital_delay=57, digital_buffer=18, opx_port=None)}), inputs=PortsDefaultdict(<function Octave.__post_init__.<locals>.<lambda> at 0x7f9a0cff7b50>, {}), port=105, connectivity=OPXplus(name='con8', outputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7400>, {3: OPXOutput(device='con8', number=3, offset=0.0, filter={}), 4: OPXOutput(device='con8', number=4, offset=0.0, filter={}), 7: OPXOutput(device='con8', number=7, offset=0.0, filter={}), 8: OPXOutput(device='con8', number=8, offset=0.0, filter={}), 9: OPXOutput(device='con8', number=9, offset=0.0, filter={}), 10: OPXOutput(device='con8', number=10, offset=0.0, filter={}), 5: OPXOutput(device='con8', number=5, offset=0.0, filter={}), 6: OPXOutput(device='con8', number=6, offset=0.0, filter={})}), inputs=PortsDefaultdict(<function OPXplus.__post_init__.<locals>.<lambda> at 0x7f9a0cff7490>, {}))).
[38;20m[Qibocal 0.0.12|INFO|2024-09-23 14:32:11]: Executing mode AUTOCALIBRATION on resonator punchout.[0m
[Qibo 0.2.12|INFO|2024-09-23 14:32:11]: Minimal execution time (sweep): 233.47199999999998
Connected to: Rohde&Schwarz SGS100A (serial:1416.0505k02/114167, firmware:4.2.76.0-4.30.046.295) in 0.17s
Connected to: Rohde&Schwarz SGS100A (serial:1416.0505k02/114164, firmware:4.2.76.0-4.30.046.295) in 0.16s
2024-09-23 14:32:12,238 - qm - INFO     - Octave "octave2" Health check passed, current temperature 60
2024-09-23 14:32:13,386 - qm - INFO     - Octave "octave3" Health check passed, current temperature 57
2024-09-23 14:32:14,401 - qm - INFO     - Octave "octave4" Health check passed, current temperature 58
2024-09-23 14:32:15,134 - qm - INFO     - Octave "octave5" Health check passed, current temperature 59
2024-09-23 14:32:16,145 - qm - INFO     - Octave "octave6" Health check passed, current temperature 58
Traceback (most recent call last):
  File "/nfs/users/elisa.stabilini/cal_venv/bin/qq", line 8, in <module>
    sys.exit(command())
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/click/core.py", line 1688, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/cli/_base.py", line 75, in auto
    autocalibrate(runcard, folder, force, update)
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/cli/autocalibration.py", line 42, in autocalibrate
    history = runcard.run(
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/auto/runcard.py", line 63, in run
    instance.run_protocol(
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/auto/execute.py", line 131, in run_protocol
    completed = task.run(platform=self.platform, targets=self.targets, mode=mode)
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/auto/task.py", line 149, in run
    completed.data, completed.data_time = operation.acquisition(
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/auto/operation.py", line 42, in wrapper
    out = func(*args, **kwds)
  File "/nfs/users/elisa.stabilini/qibocal/src/qibocal/protocols/resonator_punchout.py", line 134, in _acquisition
    results = platform.sweep(
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qibolab/platform/platform.py", line 301, in sweep
    new_result = instrument.sweep(
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qibolab/instruments/qm/controller.py", line 402, in sweep
    result = self.execute_program(experiment)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qibolab/instruments/qm/controller.py", line 288, in execute_program
    machine = self.manager.open_qm(self.config.__dict__)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qm/quantum_machines_manager.py", line 264, in open_qm
    self._octave_manager.set_octaves_from_qua_config(loaded_config.v1_beta.octaves)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/qm/octave/octave_manager.py", line 476, in set_octaves_from_qua_config
    output_client.set_output(output_mode)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/octave_sdk/octave.py", line 944, in set_output
    self._set_default_if_needed(crb)
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/octave_sdk/octave.py", line 917, in _set_default_if_needed
    up_conv_state = self._get_current_state()
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/octave_sdk/octave.py", line 783, in _get_current_state
    up_conv_state = response.rf_up_conv
  File "/nfs/users/elisa.stabilini/cal_venv/lib/python3.10/site-packages/betterproto/__init__.py", line 698, in __getattribute__
    value = super().__getattribute__(name)
AttributeError: 'AquireResponse' object has no attribute 'rf_up_conv'
